package org.javaboy.vhr.util.设计模式.外观模式;

/**
 * TODO 外观模式（门面模式）解决的是降低调用方使用接口时的复杂逻辑组合。
 * 在调用方与实际的接口提供方之间添加一个中间层，向包装逻辑提供api接口
 * 有时外观模式也被用在中间件层，用服务中的通用性复杂逻辑包装中间件层，让使用方只关心业务开发，简化调用
 *
 * @author xyf
 * @version 1.0
 * @date 2021/5/19 9:56 下午
 */
public class 外观模式 {

    //场景：物流公司的货物从上架到分拣出库
    //对外部的送货人和去火人来说，他们并不需要直到仓库内的工作
    //--》外观模式（门面模式）

    //代码场景：模拟一个将所有服务接口添加白名单的场景
    //每一次发版上线都需要测试，而这部分测试验证一般会通过白名单开量或切量的方式验证，如果在每一个接口都添加这种逻辑，就会很麻烦
    //这一类具备通用逻辑的共性请求，非常适合开发成组件


    //1、需要结合springboot中自定义stater中间件开发的方式，统一处理所有需要开白名单逻辑的代码
    //2、设计知识点：一、starter中间件开发 二、面向切面编程和自定义注解实现 三、外部自定义配置信息的透传（springboot和spring存在差异）

}
